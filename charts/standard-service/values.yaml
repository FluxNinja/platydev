connect: 
  hasura:
    enabled: false
    configMap: "{{ .Release.Name }}-hasura"
    secret: "{{ .Release.Name }}-hasura"
  minio:
    enabled: false
    configMap: "{{ .Release.Name }}-minio"
    secret: "{{ .Release.Name }}-minio"
  rabbitmq:
    enabled: false
    host: "{{ .Release.Name }}-rabbitmq"
    configMap: "{{ .Release.Name }}-rabbitmq"
    secret: "{{ .Release.Name }}-rabbitmq"
    
replicaCount: 1

imageConfig:
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

extraEnv: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

targetPort: 80

service:
  type: ClusterIP
  port: 3000

## Ingress for load balancer
ingress:
  enabled: false
##  Ingress labels
##
#   labels:
#     dns: "route53"

##  Ingress annotations
##
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     kubernetes.io/tls-acme: "true"

##  Ingress hostnames
## Must be provided if Ingress is enabled
##
#  hosts:
#    - name: my-service.domain1.com
#      path: /
#      tls: false
#    - name: my-service.domain2.com
#      path: /
#
#      ## Set this to true in order to enable TLS on the ingress record
#      tls: true
#
#      ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
#      ## Secrets must be added manually to the namespace
#      tlsSecret: my-service.domain2-tls

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
