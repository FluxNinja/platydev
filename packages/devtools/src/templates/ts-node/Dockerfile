# ! ################################################ ! #
# ! ###|   Autogenerated file - DO NOT MODIFY   |### ! #
# ! ################################################ ! #


FROM node:12-alpine as lerna-base
RUN apk add --no-cache jq
RUN npm i lerna -g --loglevel error
USER node
RUN mkdir /home/node/app
WORKDIR /home/node/app

COPY --chown=node:node package.json yarn.lock lerna.json tsconfig.json tsconfig.build.json .eslintrc.js .eslintignore ./
#{{#each dependencies}}
COPY --chown=node:node {{this.path}}/package.json {{this.path}}/yarn.* {{this.path}}/
#{{/each}}
COPY --chown=node:node {{path}}/package.json {{path}}/yarn.lock /home/node/app/{{path}}/

FROM lerna-base as builder
RUN lerna bootstrap --ignore-scripts
COPY --chown=node:node {{path}} /home/node/app/{{path}}
#{{#each dependencies}}
COPY --chown=node:node {{this.path}} {{this.path}}
#{{/each}}

RUN lerna run build

FROM lerna-base as dependencies
RUN cat {{path}}/package.json | jq '. * {workspaces: {nohoist: ["**"]}}' > {{path}}/package.json && \
    lerna bootstrap --ignore-scripts -- --production --no-optional && \
    tar -cf /home/node/dependencies.tar {{path}}/node_modules {{path}}/package.json {{path}}/yarn.lock

FROM node:12-alpine as run
USER node
RUN mkdir /home/node/app
WORKDIR /home/node/app
EXPOSE 3000
COPY --from=dependencies /home/node/dependencies.tar /tmp
RUN tar -xf /tmp/dependencies.tar
COPY --from=builder /home/node/app/{{path}}/dist /home/node/app/{{path}}/dist
CMD cd {{path}} && yarn production

