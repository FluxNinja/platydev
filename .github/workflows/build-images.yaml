name: build docker images
on:
  push:
    branches:
      - master
jobs:
  # build-packages:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: '14'
  #     - name: Cache node_modules
  #       uses: actions/cache@v2
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
  #     - name: Yarn install
  #       run: yarn
  #     # * Build all the packages to ensure all dependencies are present
  #     - name: Yarn build
  #       run: yarn build
  # build:
  #   name: "Build and push docker images"
  #   runs-on: ubuntu-latest
  #   container: gcr.io/k8s-skaffold/skaffold:v1.17.0
  #   steps:
  #     - uses: actions/checkout@v2
  #     # - name: Setup Minikube
  #     #   uses: manusa/actions-setup-minikube@v2.1.0
  #     #   with:
  #     #     minikube version: 'v1.15.1'
  #     #     kubernetes version: 'v1.19.4'
  #     # - name: config default-repo
  #     # - name: config local-cluster
  #     #   working-directory: tilehuria
  #     #   run: skaffold config set local-cluster true
  #     # - name: config list
  #     #   working-directory: tilehuria
  #     #   run: skaffold config list -a
      
  #     # - name: build
  #     #   working-directory: tilehuria
  #     #   run: skaffold build
  taglist:
    name: "List docker image tags"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      # ! Use the last published version of PDT
      - name: Install PDT
        run: |
          yarn global add @platyplus/devtools lerna
          # echo "$(yarn global bin)" >> $GITHUB_PATH
      - name: List projects
        run: platy list projects 
      - name: Show Tilehuria project
        id: project
        run: |
          project=$(platy show tilehuria --json)
          project="${project//'%'/'%25'}"
          project="${project//$'\n'/'%0A'}"
          project="${project//$'\r'/'%0D'}"
          matrix="{\"include\":${{toJson(fromJson(steps.project.outputs.project).services)}}}"
          echo "::set-output name=matrix::$project"
          echo "::set-output name=project::$project"
      # - name: matrix
      #   run: |
      #     echo 
    # outputs:
    #   matrix: 
    #     include: ${{toJson(fromJson(steps.project.outputs.project).services)}}
  tag:
    needs: taglist
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.taglist.outputs.matrix)}}
    steps:
      - run: echo ${{ matrix.version }}