- table:
    schema: auth
    name: account_providers
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: provider
    using:
      foreign_key_constraint_on: auth_provider
- table:
    schema: auth
    name: account_roles
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: roleByRole
    using:
      foreign_key_constraint_on: role
- table:
    schema: auth
    name: accounts
  object_relationships:
  - name: role
    using:
      foreign_key_constraint_on: default_role
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_providers
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_roles
  - name: refresh_tokens
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: refresh_tokens
- table:
    schema: auth
    name: email_templates
- table:
    schema: auth
    name: migrations
- table:
    schema: auth
    name: provider_requests
- table:
    schema: auth
    name: providers
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: auth_provider
        table:
          schema: auth
          name: account_providers
- table:
    schema: auth
    name: refresh_tokens
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
- table:
    schema: auth
    name: roles
  array_relationships:
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: role
        table:
          schema: auth
          name: account_roles
  - name: accounts
    using:
      foreign_key_constraint_on:
        column: default_role
        table:
          schema: auth
          name: accounts
- table:
    schema: auth
    name: whitelist
- table:
    schema: metadata
    name: app_config
  select_permissions:
  - role: me
    permission:
      columns:
      - id
      - updated_at
      - menu_order
      - deleted
      filter: {}
- table:
    schema: metadata
    name: check_constraint
  configuration:
    custom_root_fields: {}
    custom_column_names:
      table_id: tableId
      constraint_name: contraintName
      table_schema: tableSchema
      table_name: tableName
  object_relationships:
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
- table:
    schema: metadata
    name: column_info
  configuration:
    custom_root_fields: {}
    custom_column_names:
      column_default: default
      udt_name: udtName
      is_nullable: isNullable
      column_name: name
  object_relationships:
  - name: config
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: property_config
        column_mapping:
          id: id
  - name: primaryKey
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: primary_key_column
        column_mapping:
          id: column_id
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
  array_relationships:
  - name: canInsert
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: permission_insert_columns
        column_mapping:
          id: column_id
  - name: canSelect
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: permission_select_columns
        column_mapping:
          id: column_id
  - name: canUpdate
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: permission_update_columns
        column_mapping:
          id: column_id
  select_permissions:
  - role: me
    permission:
      columns:
      - table_catalog
      - table_schema
      - table_name
      - column_name
      - ordinal_position
      - column_default
      - is_nullable
      - data_type
      - character_maximum_length
      - character_octet_length
      - numeric_precision
      - numeric_precision_radix
      - numeric_scale
      - datetime_precision
      - interval_type
      - interval_precision
      - character_set_catalog
      - character_set_schema
      - character_set_name
      - collation_catalog
      - collation_schema
      - collation_name
      - domain_catalog
      - domain_schema
      - domain_name
      - udt_catalog
      - udt_schema
      - udt_name
      - scope_catalog
      - scope_schema
      - scope_name
      - maximum_cardinality
      - dtd_identifier
      - is_self_referencing
      - is_identity
      - identity_generation
      - identity_start
      - identity_increment
      - identity_maximum
      - identity_minimum
      - identity_cycle
      - is_generated
      - generation_expression
      - is_updatable
      - id
      - table_id
      filter:
        _or:
        - canSelect:
            role:
              appRole:
                account_roles:
                  account:
                    user_id:
                      _eq: X-Hasura-User-Id
        - canUpdate:
            role:
              appRole:
                account_roles:
                  account:
                    user_id:
                      _eq: X-Hasura-User-Id
        - canInsert:
            role:
              appRole:
                account_roles:
                  account:
                    user_id:
                      _eq: X-Hasura-User-Id
- table:
    schema: metadata
    name: computed_field
  configuration:
    custom_root_fields: {}
    custom_column_names:
      computed_field_name: computedFieldName
      table_id: tableId
      table_schema: tableSchema
      table_name: tableName
  object_relationships:
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
- table:
    schema: metadata
    name: computed_property
  select_permissions:
  - role: me
    permission:
      columns:
      - name
      - transformation
      - template
      - type
      - nullable
      - id
      - table_id
      filter: {}
- table:
    schema: metadata
    name: custom_type
- table:
    schema: metadata
    name: foreign_key_constraint
  configuration:
    custom_root_fields: {}
    custom_column_names:
      table_id: tableId
      on_delete: onDelete
      on_update: onUpdate
      constraint_name: contraintName
      ref_id: refId
      ref_columns: refColumns
      ref_table_table_schema: refTableSchema
      column_mapping: columnMapping
      ref_table: refTableName
      table_schema: tableSchema
      constraint_oid: contraintOid
      table_name: tableName
  select_permissions:
  - role: me
    permission:
      columns:
      - table_schema
      - table_name
      - constraint_name
      - constraint_oid
      - ref_table_table_schema
      - ref_table
      - column_mapping
      - on_update
      - on_delete
      - columns
      - ref_columns
      - id
      - ref_id
      - table_id
      filter:
        _and:
        - table_schema:
            _ne: hdb_catalog
- table:
    schema: metadata
    name: function
- table:
    schema: metadata
    name: function_agg
- table:
    schema: metadata
    name: index
  configuration:
    custom_root_fields: {}
    custom_column_names:
      table_id: tableId
      table_schema: tableSchema
      table_name: tableName
      index_name: name
  array_relationships:
  - name: columns
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: index_column
        column_mapping:
          id: index_id
  select_permissions:
  - role: me
    permission:
      columns:
      - table_schema
      - table_name
      - index_name
      filter: {}
- table:
    schema: metadata
    name: index_column
  configuration:
    custom_root_fields: {}
    custom_column_names:
      column_id: columnId
      index_id: indexId
      table_id: tableId
      table_schema: tableSchema
      table_name: tableName
      column_name: columnName
      index_name: indexName
  select_permissions:
  - role: me
    permission:
      columns:
      - table_schema
      - table_name
      - index_name
      - column_name
      filter: {}
- table:
    schema: metadata
    name: permission_agg
  configuration:
    custom_root_fields: {}
    custom_column_names:
      table_id: tableId
      role_name: roleName
      table_schema: tableSchema
      table_name: tableName
  object_relationships:
  - name: role
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: role
        column_mapping:
          role_name: id
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
- table:
    schema: metadata
    name: permission_insert_columns
  configuration:
    custom_root_fields: {}
    custom_column_names:
      column_id: columnId
      table_id: tableId
      role_name: roleName
      table_schema: tableSchema
      table_name: tableName
      column_name: columnName
  object_relationships:
  - name: column
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: column_info
        column_mapping:
          column_id: id
  - name: role
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: role
        column_mapping:
          role_name: id
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
  select_permissions:
  - role: me
    permission:
      columns:
      - table_schema
      - table_name
      - role_name
      - column_name
      filter:
        role:
          appRole:
            account_roles:
              account:
                user_id:
                  _eq: X-Hasura-User-Id
      allow_aggregations: true
- table:
    schema: metadata
    name: permission_select_columns
  configuration:
    custom_root_fields: {}
    custom_column_names:
      column_id: columnId
      table_id: tableId
      role_name: roleName
      table_schema: tableSchema
      table_name: tableName
      column_name: columnName
  object_relationships:
  - name: column
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: column_info
        column_mapping:
          column_id: id
  - name: role
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: role
        column_mapping:
          role_name: id
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
  select_permissions:
  - role: me
    permission:
      columns:
      - table_schema
      - table_name
      - role_name
      - column_name
      filter:
        role:
          appRole:
            account_roles:
              account:
                user_id:
                  _eq: X-Hasura-User-Id
      allow_aggregations: true
- table:
    schema: metadata
    name: permission_update_columns
  configuration:
    custom_root_fields: {}
    custom_column_names:
      column_id: columnId
      table_id: tableId
      role_name: roleName
      table_schema: tableSchema
      table_name: tableName
      column_name: columnName
  object_relationships:
  - name: column
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: column_info
        column_mapping:
          column_id: id
  - name: role
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: role
        column_mapping:
          role_name: id
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
  select_permissions:
  - role: me
    permission:
      columns:
      - table_schema
      - table_name
      - role_name
      - column_name
      filter:
        role:
          appRole:
            account_roles:
              account:
                user_id:
                  _eq: X-Hasura-User-Id
      allow_aggregations: true
- table:
    schema: metadata
    name: primary_key
  configuration:
    custom_root_fields: {}
    custom_column_names:
      table_id: tableId
      constraint_name: constraintName
      table_schema: tableSchema
      table_name: tableName
  object_relationships:
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
  array_relationships:
  - name: columns
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: index_column
        column_mapping:
          id: index_id
  select_permissions:
  - role: me
    permission:
      columns:
      - table_schema
      - table_name
      - constraint_name
      filter:
        table:
          permissions:
            role:
              appRole:
                account_roles:
                  account:
                    user_id:
                      _eq: X-Hasura-User-Id
- table:
    schema: metadata
    name: primary_key_column
  configuration:
    custom_root_fields: {}
    custom_column_names:
      column_id: columnId
      table_id: tableId
      constraint_name: constraintName
      table_schema: tableSchema
      table_name: tableName
      column_name: columnName
  object_relationships:
  - name: column
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: column_info
        column_mapping:
          column_id: id
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
  select_permissions:
  - role: me
    permission:
      columns:
      - constraint_name
      - table_schema
      - table_name
      - column_name
      filter: {}
- table:
    schema: metadata
    name: property_config
  select_permissions:
  - role: me
    permission:
      columns:
      - component
      - deleted
      - description
      - icon
      - json_schema
      - id
      - property_name
      - table_id
      - title
      - updated_at
      filter: {}
- table:
    schema: metadata
    name: relationship
  configuration:
    custom_root_fields: {}
    custom_column_names:
      table_id: tableId
      rel_type: type
      rel_def: definition
      rel_name: name
      is_system_defined: isSystemDefined
      remote_table_id: remoteTableId
      table_schema: tableSchema
      table_name: tableName
  object_relationships:
  - name: remoteTable
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          remote_table_id: id
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
  array_relationships:
  - name: mapping
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: relationship_mapping
        column_mapping:
          id: relationship_id
  select_permissions:
  - role: me
    permission:
      columns:
      - comment
      - id
      - is_system_defined
      - rel_def
      - rel_name
      - rel_type
      - remote_table_id
      - table_id
      - table_name
      - table_schema
      filter:
        remoteTable: {}
- table:
    schema: metadata
    name: relationship_mapping
  configuration:
    custom_root_fields: {}
    custom_column_names:
      column_id: columnId
      table_id: tableId
      remote_column_id: remoteColumnId
      remote_column_name: remoteColumnName
      rel_name: relationName
      remote_table_id: remoteTableId
      remote_schema_name: remoteSchemaName
      remote_table_name: remoteTableName
      table_schema: schemaName
      relationship_id: relationId
      table_name: tableName
      column_name: columnName
  object_relationships:
  - name: column
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: column_info
        column_mapping:
          column_id: id
  - name: relationship
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: relationship
        column_mapping:
          relationship_id: id
  - name: remoteColumn
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: column_info
        column_mapping:
          remote_column_id: id
  - name: remoteTable
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          remote_table_id: id
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          table_id: id
  select_permissions:
  - role: me
    permission:
      columns:
      - column_id
      - column_name
      - id
      - rel_name
      - relationship_id
      - remote_column_id
      - remote_column_name
      - remote_schema_name
      - remote_table_id
      - remote_table_name
      - table_id
      - table_name
      - table_schema
      filter: {}
- table:
    schema: metadata
    name: role
  configuration:
    custom_root_fields: {}
    custom_column_names:
      role_name: name
  object_relationships:
  - name: appRole
    using:
      manual_configuration:
        remote_table:
          schema: auth
          name: roles
        column_mapping:
          role_name: role
  array_relationships:
  - name: permissions
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: permission_agg
        column_mapping:
          id: role_name
- table:
    schema: metadata
    name: schema_info
- table:
    schema: metadata
    name: table
  configuration:
    custom_root_fields: {}
    custom_column_names:
      is_enum: isEnum
      is_system_defined: isSystemDefined
      properties_config: _properties_config__old
      updated_at: updatedAt
      table_schema: schema
      table_name: name
  object_relationships:
  - name: config
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table_config
        column_mapping:
          id: id
  - name: info
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table_info
        column_mapping:
          id: table_id
  - name: primaryKey
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: primary_key
        column_mapping:
          id: table_id
  - name: view
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: view_info
        column_mapping:
          id: table_id
  array_relationships:
  - name: canInsert
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: permission_insert_columns
        column_mapping:
          id: table_id
  - name: canSelect
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: permission_select_columns
        column_mapping:
          id: table_id
  - name: canUpdate
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: permission_update_columns
        column_mapping:
          id: table_id
  - name: checkConstraints
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: check_constraint
        column_mapping:
          id: table_id
  - name: columns
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: column_info
        column_mapping:
          id: table_id
  - name: computedFields
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: computed_field
        column_mapping:
          id: table_id
  - name: computedProperties
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: computed_property
        column_mapping:
          id: table_id
  - name: dependentForeignKeys
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: foreign_key_constraint
        column_mapping:
          id: ref_id
  - name: foreignKeys
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: foreign_key_constraint
        column_mapping:
          id: table_id
  - name: indexes
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: index
        column_mapping:
          id: table_id
  - name: permissions
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: permission_agg
        column_mapping:
          id: table_id
  - name: primaryKeys
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: primary_key
        column_mapping:
          id: table_id
  - name: propertiesConfig
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: property_config
        column_mapping:
          id: table_id
  - name: refForeignKeys
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: foreign_key_constraint
        column_mapping:
          id: ref_id
  - name: relationships
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: relationship
        column_mapping:
          id: table_id
  select_permissions:
  - role: me
    permission:
      columns:
      - configuration
      - deleted
      - id
      - is_enum
      - is_system_defined
      - properties_config
      - table_name
      - table_schema
      - updated_at
      filter:
        _and:
        - canSelect:
            _and:
            - column_name:
                _eq: updated_at
        - canSelect:
            _and:
            - column_name:
                _eq: deleted
        - table_schema:
            _ne: metadata
- table:
    schema: metadata
    name: table_config
  select_permissions:
  - role: me
    permission:
      columns:
      - component
      - deleted
      - description
      - document_label
      - document_title
      - icon
      - order
      - id
      - title
      - updated_at
      filter: {}
- table:
    schema: metadata
    name: table_info
  object_relationships:
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          id: id
- table:
    schema: metadata
    name: unique_constraint
  object_relationships:
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          id: id
- table:
    schema: metadata
    name: view_info
  object_relationships:
  - name: table
    using:
      manual_configuration:
        remote_table:
          schema: metadata
          name: table
        column_mapping:
          id: id
  select_permissions:
  - role: me
    permission:
      columns:
      - id
      - table_id
      - table_name
      - table_schema
      filter:
        _and:
        - table_schema:
            _ne: metadata
        - table_schema:
            _ne: hdb_catalog
        - table_schema:
            _ne: pg_catalog
        - table_schema:
            _ne: information_schema
- table:
    schema: public
    name: drug
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - id
      - name
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - updated_at
      - name
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - id
      - updated_at
      - name
      filter: {}
      check: null
- table:
    schema: public
    name: lab_test
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - id
      - name
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - deleted
      - id
      - name
      - updated_at
      filter: {}
  update_permissions:
  - role: user
    permission:
      columns:
      - name
      filter: {}
      check: null
- table:
    schema: public
    name: patient
  array_relationships:
  - name: visites
    using:
      foreign_key_constraint_on:
        column: patient_id
        table:
          schema: public
          name: visite
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - a_boolean
      - a_date
      - a_numeric
      - an_integer
      - id
      - name
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - a_boolean
      - a_date
      - a_numeric
      - an_integer
      - deleted
      - id
      - name
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - a_boolean
      - a_date
      - a_numeric
      - an_integer
      - deleted
      - name
      filter: {}
      check: null
- table:
    schema: public
    name: users
  object_relationships:
  - name: account
    using:
      manual_configuration:
        remote_table:
          schema: auth
          name: accounts
        column_mapping:
          id: user_id
  select_permissions:
  - role: me
    permission:
      columns:
      - avatar_url
      - created_at
      - deleted
      - display_name
      - id
      - updated_at
      filter:
        id:
          _eq: X-Hasura-User-Id
  update_permissions:
  - role: me
    permission:
      columns:
      - avatar_url
      - display_name
      filter: {}
      check: null
- table:
    schema: public
    name: visite
  object_relationships:
  - name: patient
    using:
      foreign_key_constraint_on: patient_id
  array_relationships:
  - name: lab_tests
    using:
      foreign_key_constraint_on:
        column: visite_id
        table:
          schema: public
          name: visite_lab_test
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - id
      - muac
      - patient_id
      - test
      - visit_date
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - deleted
      - id
      - muac
      - patient_id
      - test
      - updated_at
      - visit_date
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - deleted
      - muac
      - patient_id
      - test
      - visit_date
      filter: {}
      check: null
- table:
    schema: public
    name: visite_lab_test
  object_relationships:
  - name: lab_test
    using:
      foreign_key_constraint_on: lab_test_id
  - name: visite
    using:
      foreign_key_constraint_on: visite_id
  insert_permissions:
  - role: user
    permission:
      check: {}
      columns:
      - deleted
      - lab_test_id
      - visite_id
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - deleted
      - updated_at
      - lab_test_id
      - visite_id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - deleted
      filter: {}
      check: null
