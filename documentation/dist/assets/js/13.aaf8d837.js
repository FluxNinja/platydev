(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{366:function(e,t,a){"use strict";a.r(t);var n=a(42),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"platy-devtools-command-line-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#platy-devtools-command-line-interface"}},[e._v("#")]),e._v(" Platy DevTools Command-line interface")]),e._v(" "),a("p",[e._v("Platy DevTools")]),e._v(" "),a("h2",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),a("ul",[a("li",[e._v("Docker >= 19.03.13")]),e._v(" "),a("li",[e._v("An accessible Kubernetes and "),a("code",[e._v("kubectl")]),e._v(" installed")]),e._v(" "),a("li",[e._v("Skaffold >= v1.17")]),e._v(" "),a("li",[e._v("Helm >= v3.3.4")]),e._v(" "),a("li",[e._v("Node >= v14.10")]),e._v(" "),a("li",[e._v("Git >= v2.28")]),e._v(" "),a("li",[e._v("Yarn >= v1.22.10")])]),e._v(" "),a("p",[e._v("Depending on the services you would use:")]),e._v(" "),a("ul",[a("li",[e._v("Hasura CLI >= v1.3.3")]),e._v(" "),a("li",[e._v("Quasar CLI >= v1.2.2")])]),e._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yarn global add @platyplus/devtools\n")])])]),a("p",[e._v("The Platyplus DevTools CLI is now installed. You can run it with the "),a("code",[e._v("platy")]),e._v(" command line.")]),e._v(" "),a("p",[e._v("Most of the sub-commands are taking multiple arguments. You can either ask the syntax in adding "),a("code",[e._v("--help")]),e._v(" to the command you want to use, or run the command without arguments: it will either print help on the command, or prompt you the missing information. "),a("a",{attrs:{href:"../cli"}},[e._v("Find out more about the Platy CLI")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"project-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-configuration"}},[e._v("#")]),e._v(" Project configuration")]),e._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("platy <command>\n\nCommands:\n  platy dev [project]               run `skaffold dev` for the given project\n  platy init [name] [organisation]  create new monorepo\n  platy create                      create new [project|package|service]\n  platy list                        list [projects|services]\n  platy sync [project]              synchronise project files. Create/update skaffold, and overrides dockerfiles\n  platy version                     version [project|chart]\n  platy completion                  generate completion script\n\nOptions:\n  --help     Show help  [boolean]\n  --version  Show version number  [boolean]\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);