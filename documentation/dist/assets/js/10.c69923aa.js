(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{376:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"devtools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devtools"}},[e._v("#")]),e._v(" "),a("code",[e._v("Devtools")])]),e._v(" "),a("p",[e._v("Platy DevTools")]),e._v(" "),a("p",[e._v("Work In Progress")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("ul",[a("li",[e._v("Skaffold")]),e._v(" "),a("li",[e._v("Kubernetes (kubectl)")]),e._v(" "),a("li",[e._v("Helm")]),e._v(" "),a("li",[e._v("Lerna")])]),e._v(" "),a("p",[e._v("Depending on the services you would use:")]),e._v(" "),a("ul",[a("li",[e._v("Hasura CLI")]),e._v(" "),a("li",[e._v("Quasar CLI")])]),e._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i -g @platyplus/devtools\n")])])]),a("h2",{attrs:{id:"project-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-configuration"}},[e._v("#")]),e._v(" Project configuration")]),e._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("platy <command>\n\nCommands:\n  platy skaffold [project]  run `skaffold dev`\n  platy create              create new [repo|project|package|service]\n  platy sync <project>      synchronise project files. Create/update skaffold, and overrides dockerfiles\n  platy list projects       list all available projects in the current monorepo\n  platy completion          generate completion script\n\nOptions:\n  --help     Show help  [boolean]\n  --version  Show version number  [boolean]\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);